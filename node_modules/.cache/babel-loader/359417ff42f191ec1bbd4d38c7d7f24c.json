{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abrar-byte/basic/src/React Hook Form/Control.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useForm, Controller } from 'react-hook-form';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '300px'\n    },\n    '& .MuiButtonBase-root': {\n      margin: theme.spacing(2)\n    }\n  },\n  link: {\n    cursor: 'pointer'\n  }\n}));\n\nconst Control = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const imageUpload = e => {\n    const file = e.target.files[0];\n    console.log(file, \"file\");\n    getBase64(file).then(base64 => {\n      localStorage[\"fileBase64\"] = base64;\n      console.debug(\"file stored\", base64);\n    }).then(() => setImage(localStorage[\"fileBase64\"]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: \"logo\",\n      control: control,\n      defaultValue: \"\",\n      render: ({\n        field: {\n          onChange,\n          value\n        },\n        fieldState: {\n          error\n        }\n      }) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"logo\",\n        onChange: e => imageUpload(e),\n        className: \"border  box-border border-black py-1 px-3.5 w-full rounded mb-2.5 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) // <TextField\n      //   label=\"Email\"\n      //   variant=\"outlined\"\n      //   value={value}\n      //   onChange={onChange}\n      //   error={!!error}\n      //   helperText={error ? error.message : null}\n      //   type=\"email\"\n      // />\n      ,\n      rules: {\n        required: 'Email required',\n        pattern: {\n          value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n          message: 'Must use a valid email'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"password\",\n      control: control,\n      defaultValue: \"\",\n      render: ({\n        field: {\n          onChange,\n          value\n        },\n        fieldState: {\n          error\n        }\n      }) => /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        variant: \"outlined\",\n        value: value,\n        onChange: onChange,\n        error: !!error,\n        helperText: error ? error.message : null,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this),\n      rules: {\n        required: 'Password required',\n        minLength: {\n          value: 8,\n          message: 'Password should be as least 8 characters'\n        },\n        pattern: {\n          value: /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/,\n          message: 'Password should contain at least 1 alphabet and 1 numeric value'\n        },\n        validate: {\n          equals: password => password !== 'password123' || 'Choose a more secure password'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => console.log('closed'),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Control, \"5F9akq6FaTXYqFO+cElciwaeFsM=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = Control;\nexport default Control;\n\nvar _c;\n\n$RefreshReg$(_c, \"Control\");","map":{"version":3,"sources":["/home/abrar-byte/basic/src/React Hook Form/Control.js"],"names":["React","makeStyles","TextField","Button","useForm","Controller","useStyles","theme","root","display","flexDirection","justifyContent","alignItems","padding","spacing","paddingTop","margin","width","link","cursor","Control","classes","handleSubmit","control","onSubmit","data","console","log","imageUpload","e","file","target","files","getBase64","then","base64","localStorage","debug","setImage","field","onChange","value","fieldState","error","required","pattern","message","minLength","validate","equals","password"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useForm, Controller } from 'react-hook-form';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '300px',\n    },\n    '& .MuiButtonBase-root': {\n      margin: theme.spacing(2),\n    },\n  },\n  link: {\n    cursor: 'pointer',\n  },\n}));\n\nconst Control = () => {\n  const classes = useStyles();\n  const { handleSubmit, control } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n  const imageUpload = (e) => {\n    const file = e.target.files[0];\n    console.log(file, \"file\");\n    getBase64(file)\n      .then((base64) => {\n        localStorage[\"fileBase64\"] = base64;\n        console.debug(\"file stored\", base64);\n      })\n      .then(() => setImage(localStorage[\"fileBase64\"]));\n  };\n\n  return (\n    <form className={classes.root} onSubmit={handleSubmit(onSubmit)} noValidate>\n      <Controller\n        name=\"logo\"\n        control={control}\n        defaultValue=\"\"\n        render={({ field: { onChange, value }, fieldState: { error } }) => (\n          <input\n          type=\"file\"\n          id=\"logo\"\n          onChange={(e)=>imageUpload(e)}\n          className=\"border  box-border border-black py-1 px-3.5 w-full rounded mb-2.5 \"\n        />\n\n          // <TextField\n          //   label=\"Email\"\n          //   variant=\"outlined\"\n          //   value={value}\n          //   onChange={onChange}\n          //   error={!!error}\n          //   helperText={error ? error.message : null}\n          //   type=\"email\"\n          // />\n        )}\n        rules={{\n          required: 'Email required',\n          pattern: {\n            value:\n              /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            message: 'Must use a valid email',\n          },\n        }}\n      />\n      <Controller\n        name=\"password\"\n        control={control}\n        defaultValue=\"\"\n        render={({ field: { onChange, value }, fieldState: { error } }) => (\n          <TextField\n            label=\"Password\"\n            variant=\"outlined\"\n            value={value}\n            onChange={onChange}\n            error={!!error}\n            helperText={error ? error.message : null}\n            type=\"password\"\n          />\n        )}\n        rules={{\n          required: 'Password required',\n          minLength: {\n            value: 8,\n            message: 'Password should be as least 8 characters',\n          },\n          pattern: {\n            value: /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/,\n            message:\n              'Password should contain at least 1 alphabet and 1 numeric value',\n          },\n          validate: {\n            equals: password =>\n              password !== 'password123' || 'Choose a more secure password',\n          },\n        }}\n      />\n      <div>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => console.log('closed')}\n        >\n          Cancel\n        </Button>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Sign up\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default Control;"]},"metadata":{},"sourceType":"module"}